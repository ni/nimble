@using System.Diagnostics.CodeAnalysis
@inherits NimbleInputBase<string?>

<nimble-text-area autofocus="@Autofocus"
                  appearance="@Appearance.ToAttributeValue()"
                  resize="@Resize.ToAttributeValue()"
                  current-value="@BindConverter.FormatValue(CurrentValue)"
                  @onchange="@(EventCallback.Factory.CreateBinder<string?>(this, __value => CurrentValueAsString = __value, CurrentValueAsString))"
                  readonly="@Readonly"
                  disabled="@Disabled"
                  required="@Required"
                  placeholder="@Placeholder"
                  @attributes="AdditionalAttributes">
    @ChildContent
</nimble-text-area>

@code {
    [Parameter]
    public bool? Disabled { get; set; }

    [Parameter]
    public bool? Readonly { get; set; }

    [Parameter]
    public bool? Required { get; set; }

    [Parameter]
    public bool? Autofocus { get; set; }

    [Parameter]
    public Resize? Resize { get; set; }

    [Parameter]
    public Appearance? Appearance { get; set; }

    [Parameter]
    public string? Placeholder { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    protected override bool TryParseValueFromString(string? value, out string? result, [NotNullWhen(false)] out string? validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }
}