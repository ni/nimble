/**
 * nimble-extensions.js is used as a custom configuration file in the Adobe XD
 * extension settings. It both augments the ./config generated by the extension
 * and performs additional StyleDictionary builds for custom platforms.
 */

const StyleDictionary = require('style-dictionary');

StyleDictionary.registerTransform({
    type: 'value',
    transitive: true,
    name: 'font/weight',
    matcher: token => token.attributes.category === 'font',
    transformer: token => {
        if (token.value === 'Light') {
            token.value = '300';
        } else if (token.value === 'Regular') {
            token.value = '400';
        } else if (token.value === 'Semibold') {
            token.value = '600';
        } else if (token.value === 'Bold') {
            token.value = '700';
        }
        return token.value;
    }
});

// Workaround as name/dsp/kebab does not support prefixes
// See: https://github.com/AdobeXD/design-system-package-dsp/issues/27
const { type, matcher, transformer } = StyleDictionary.transform['name/dsp/kebab'];
StyleDictionary.registerTransform({
    name: 'name/nimble/kebab',
    type,
    matcher,
    transformer: function (prop) {
        return `ni-nimble-base-${transformer(prop)}`;
    }
});

// Combination of DSP & Nimble transform overrides
StyleDictionary.registerTransformGroup({
    name: 'css',
    transforms: [
        'attribute/cti',
        'name/nimble/kebab', // replaces name/dsp/kebab from DSP config
        'time/seconds',
        'content/icon',
        'size/px', // replaces size/rem from DSP config
        'color/css',
        'font/weight'
    ]
});

// Combination of DSP & Nimble transform overrides
StyleDictionary.registerTransformGroup({
    name: 'scss',
    transforms: [
        'attribute/cti',
        'name/nimble/kebab', // replaces name/dsp/kebab from DSP config
        'time/seconds',
        'content/icon',
        'size/px', // replaces size/rem from DSP config
        'color/css',
        'font/weight'
    ]
});

// Combination of DSP & Nimble transform overrides
StyleDictionary.registerTransformGroup({
    name: 'js',
    transforms: [
        'attribute/cti',
        'name/dsp/pascal', // replaces 'name/cti/pascal',
        'size/px', // replaces size/rem from DSP config
        'color/hex',
        'font/weight'
    ]
});
