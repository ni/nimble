name: 'main'

on:
  pull_request:
  push:
    branches:
      - '**'

env:
  GITHUB_SERVICE_USER: "rajsite"
  GITHUB_SERVICE_EMAIL: "rajsite@users.noreply.github.com"

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          # Required for beachball changelog detection
          fetch-depth: 0
          # Must checkout with a token that can push to protected branches for beachball
          # Cannot rely on GITHUB_TOKEN with workflow contents permission
          # See: https://github.com/orgs/community/discussions/40971
          token: ${{ secrets.GITHUBPAGESDEPLOYTOKEN }}

      # Install dependencies
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      - run: npm ci

      # Audit
      - run: npm audit --only=prod
      # https://github.com/ni/nimble/issues/801
      # - run: npm audit --audit-level=critical

      # Build
      - run: npm run build

      # Pack
      - run: npm run pack
      - uses: actions/upload-artifact@v2
        with:
          name: packages
          path: |
            packages/**/*.tgz
            packages/**/*.nupkg
            angular-workspace/**/*.tgz
          if-no-files-found: error
      - uses: actions/upload-pages-artifact@v1
        with:
          path: 'packages/site/dist'

      # Publish to Chromatic (from any push)
      - name: Publish to Chromatic
        if: github.event_name == 'push'
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: ./packages/nimble-components
          storybookBuildDir: ../../packages/site/dist/storybook
          exitOnceUploaded: true # Do not wait for test results
          exitZeroOnChanges: true # Option to prevent the workflow from failing

      # Lint
      - run: npm run lint

      # Test
      - run: npm run test

      # Run Lighthouse audit (from any push)
      - name: Performance Audit with Lighthouse CI
        if: github.event_name == 'push'
        run: npm run performance
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      # Check Changelog
      - run: npm run check

      - name: Validate no changes to tracked files
        run: |
          echo print files with changes:
          git diff-index --ignore-space-at-eol --stat HEAD
          echo exit with error if there are changes.
          git diff-index --quiet --ignore-space-at-eol --stat HEAD

      # Release
      - name: Set Git User
        if: startsWith(github.ref, 'refs/heads/main')
        run: |
          git config --global user.name "${{ env.GITHUB_SERVICE_USER }}"
          git config --global user.email "${{ env.GITHUB_SERVICE_EMAIL }}"

      # Update package versions, tag, and publish to npm (only from main)
      - name: Beachball publish
        if: startsWith(github.ref, 'refs/heads/main')
        env:
          NPM_SECRET_TOKEN: ${{ secrets.NPM_TOKEN }}
          NUGET_SECRET_TOKEN: ${{ secrets.NUGET_TOKEN }}
        run: npm run invoke-publish

  pages:
    needs: build
    if: startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-22.04
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
